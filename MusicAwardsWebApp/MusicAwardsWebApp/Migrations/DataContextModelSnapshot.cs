// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using MusicAwardsWebApp.Models;
using System;

namespace MusicAwardsWebApp.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.2-rtm-10011")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MusicAwardsWebApp.Models.AwardCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(300);

                    b.HasKey("Id");

                    b.ToTable("AwardCategories");
                });

            modelBuilder.Entity("MusicAwardsWebApp.Models.CategoryNominees", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("CategoryId");

                    b.Property<int>("NomineeId");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("NomineeId");

                    b.ToTable("CategoryNominees");
                });

            modelBuilder.Entity("MusicAwardsWebApp.Models.Gallery", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<byte[]>("ImageData");

                    b.Property<string>("ImageMime");

                    b.HasKey("Id");

                    b.ToTable("Galleries");
                });

            modelBuilder.Entity("MusicAwardsWebApp.Models.Nominee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasMaxLength(1);

                    b.Property<byte[]>("Image");

                    b.Property<string>("ImageMime");

                    b.Property<string>("School")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("StageName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Nominees");
                });

            modelBuilder.Entity("MusicAwardsWebApp.Models.Vote", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("CategoryId");

                    b.Property<int>("NomineeId");

                    b.Property<string>("PhoneIPAdress")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("NomineeId");

                    b.ToTable("Votes");
                });

            modelBuilder.Entity("MusicAwardsWebApp.Models.CategoryNominees", b =>
                {
                    b.HasOne("MusicAwardsWebApp.Models.AwardCategory", "Category")
                        .WithMany("Nominees")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("MusicAwardsWebApp.Models.Nominee", "Nominee")
                        .WithMany("Categories")
                        .HasForeignKey("NomineeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("MusicAwardsWebApp.Models.Vote", b =>
                {
                    b.HasOne("MusicAwardsWebApp.Models.AwardCategory", "Category")
                        .WithMany("Votes")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("MusicAwardsWebApp.Models.Nominee", "Nominee")
                        .WithMany("Votes")
                        .HasForeignKey("NomineeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
